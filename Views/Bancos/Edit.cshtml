@model projFront.ViewModels.BancoViewModel

@{
    ViewData["Title"] = "Editar Banco";
    var direitoUsuarioLogado = @ViewData["direitoUsuarioLogado"];
}

<script>
    var viewModel = @Html.Raw(Json.Serialize(Model));

    var direitoUsuarioLogado = @Html.Raw(Json.Serialize(direitoUsuarioLogado));

</script>

<style>
    .d-flex {
        display: flex;
    }

    .flex-column {
        flex-direction: column;
    }

    .mb-2 {
        margin-bottom: 10px; /* Espaço entre os botões */
    }

    .button-container {
        display: flex;
        justify-content: flex-end;
        align-items: center;
        margin-top: 25px;
        max-width: 1000px;
        margin: 0 auto; /* Centraliza o contêiner dentro da página */
    }

        .button-container .btn {
            margin-left: 10px; /* Espaçamento entre os botões */
        }
</style>

<h1>Editar Banco</h1>

<hr />

<div class="card">
    <div class="card-header">
    </div>
    <div class="card-body">

        <div class="basic-form row gy-2 gx-3 align-items-center">
            
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="IdBanco" />
                <div class="col-auto col-sm-8">
                    <label asp-for="Nome" class="control-label"></label>
                    <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" id="erroNome" class="text-danger"></span>
                </div>
                <div class="col-auto col-sm-4">
                    <label asp-for="Agencia" class="control-label"></label>
                    <input asp-for="Agencia" class="form-control" />
                <span asp-validation-for="Agencia" id="erroAgencia" class="text-danger"></span>
                </div>
                <div class="col-auto col-sm-8">
                    <label asp-for="TipoConta" class="control-label"></label>
                    <select asp-for="TipoConta" class="custom-select mr-sm-2" id="TipoConta" name="TipoConta" required>
                        <option value="" selected>Escolha o direito</option>

                        <option value="Corrente"> Corrente </option>
                        <option value="Poupança"> Poupança </option>

                    </select>
                <span id="erroTipoConta" class="text-danger"> </span>
                </div>
                <div class="col-auto col-sm-4">
                    <label asp-for="NumeroConta" class="control-label"></label>
                    <input asp-for="NumeroConta" class="form-control" />
                <span asp-validation-for="NumeroConta" id="erroNumeroConta" class="text-danger"></span>
                </div>
                <div class="col-auto col-sm-6">
                    <label asp-for="PixChave" class="control-label"></label>
                    <select asp-for="PixChave" class="custom-select mr-sm-2" id="PixChave" name="PixChave" required>
                        <option value="" selected>Escolha o tipo de conta</option>

                        <option value="CPF"> CPF </option>
                        <option value="CNPJ"> CNPJ </option>
                        <option value="Telefone"> Telefone </option>
                        <option value="Chave Aleatória"> Chave Aleatória</option>
                        <option value="Essa conta não possui Chave Pix"> Essa conta não possui Chave Pix</option>

                    </select>
                <span asp-validation-for="PixChave" id="erroPixChave" class="text-danger"></span>
                </div>
                <div class="col-auto col-sm-6">
                    <label asp-for="PixNumero" class="control-label"></label>
                    <input asp-for="PixNumero" class="form-control" />
                <span asp-validation-for="PixNumero" id="erroPixNumero" class="text-danger"></span>
                </div>
           
               
            
        </div>
    </div>
</div>
        @if (Convert.ToString(direitoUsuarioLogado) != "Operador")
        {

            <div class="container text-center">
                <div class="row align-items-start">
                    <div class="col">
                        <h1> Não Selecionados </h1>

                        <select name="ListaUsuariosNaoRelacionados" style="height: 200px; width: 400px;" class="form-select form-select-lg" id="ListaUsuariosNaoRelacionados" multiple>
                            @foreach (var item in Model.ListaUsuariosNaoRelacionados)
                            {
                                <option asp-for="ListaUsuariosNaoRelacionados" value="@item">@item.UserName</option>
                            }
                        </select>

                    </div>
            <div style="margin-top: 95px;" class="col d-flex flex-column justify-content-center align-items-center" class="col">
                <button class="btn btn-success mb-2" id="btnAdicionar">Adicionar</button>
                        <button class="btn btn-warning" id="btnRemover">Remover</button>
                    </div>
                    <div class="col">
                        <h1>  Selecionados </h1>
                        <select name="ListaUsuariosRelacionados" style="height: 200px; width: 400px;" class="form-select form-select-lg" id="ListaUsuariosRelacionados" multiple>
                            @foreach (var item in Model.ListaUsuariosRelacionados)
                            {
                                <option asp-for="ListaUsuarioRelacionados" value="@item">@item.UserName</option>
                            }
                        </select>
                    </div>
                </div>
            </div>
    }

<div style="margin-top: 30px;" class="button-container mt-80">

    <input onclick="Validacao() " value="Salvar" class="btn btn-success" />
    <a class="btn btn-warning" asp-action="Index">Voltar</a>
</div>

    @section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}




     <script>
        $(document).ready(function () {
            $("#btnAdicionar").click(function () {
                $("#ListaUsuariosNaoRelacionados option:selected").each(function () {
                    $(this).clone().appendTo("#ListaUsuariosRelacionados");

                    $(this).remove();
                });
            });

            $("#btnRemover").click(function () {
                $("#ListaUsuariosRelacionados option:selected").each(function () {
                    $(this).clone().appendTo("#ListaUsuariosNaoRelacionados");





                    $(this).remove();
                });
            });
        });
        var vValidarNome = false;
        var vValidarAgencia = false;
        var vValidarNumeroConta = false;
        var vValidarPixNumero = false;
        var vValidarTipoConta = false;
        var vValidarPixChave = false;


        function Validacao() {
            validarNome();
            validarAgencia();
            validarNumeroConta();
            validarPixNumero();
            validarTipoConta();
            validarPixChave();

            if (vValidarNome
                && vValidarAgencia
                && vValidarNumeroConta
                && vValidarPixNumero
                && vValidarTipoConta
                && vValidarPixChave) {
                EditarBanco();
            }

        }


        function validarNome() {
            const nomeDoBanco = document.getElementById('Nome').value;
            const erroNome = document.getElementById('erroNome');

            if (nomeDoBanco.trim() === '') {
                erroNome.textContent = 'O nome do banco é obrigatório.';
                vValidarNome = false;
            } else {
                erroNome.textContent = '';
                vValidarNome = true;
            }
        }

        function validarAgencia() {
            const nomeDaAgencia = document.getElementById('Agencia').value;
            const erroAgencia = document.getElementById('erroAgencia');

            if (nomeDaAgencia.trim() === '') {
                erroAgencia.textContent = 'A agência é obrigatória.';
                vValidarAgencia = false;
            } else {
                vValidarAgencia = true;
                erroAgencia.textContent = '';
            }
        }

        function validarNumeroConta() {
            const NumeroDaConta = document.getElementById('NumeroConta').value;
            const erroConta = document.getElementById('erroNumeroConta');

            if (NumeroDaConta.trim() === '') {
                erroConta.textContent = 'O número da Conta é obrigatória.';
                vValidarNumeroConta = false;
            } else {
                vValidarNumeroConta = true;
                erroConta.textContent = '';
            }
        }

        function validarPixNumero() {
            const PixDoNumero = document.getElementById('PixNumero').value;
            const erroPixNumero = document.getElementById('erroPixNumero');

            if (PixDoNumero.trim() === '') {
                erroPixNumero.textContent = 'O número do Pix é obrigatório.';
                vValidarPixNumero = false;
            } else {
                vValidarPixNumero = true;
                erroPixNumero.textContent = '';
            }
        }

        function validarTipoConta() {
            const TipoDaConta = document.getElementById('TipoConta').value;
            const erroTipoConta = document.getElementById('erroTipoConta');

            if (TipoDaConta.trim() === '') {
                erroTipoConta.textContent = 'O tipo de conta é obrigatório.';
                vValidarTipoConta = false;
            } else {
                vValidarTipoConta = true;
                erroTipoConta.textContent = '';
            }
        }

        function validarPixChave() {
            const PixDaChave = document.getElementById('PixChave').value;
            const erroPixChave = document.getElementById('erroPixChave');

            if (PixDaChave.trim() === '') {
                erroPixChave.textContent = 'O Pix Chave é obrigatório.';
                vValidarPixChave = false;
            } else {
                vValidarPixChave = true;
                erroPixChave.textContent = '';
            }
        }

        document.getElementById('Nome').addEventListener('input', validarNome);
        document.getElementById('Agencia').addEventListener('input', validarAgencia);
        document.getElementById('NumeroConta').addEventListener('input', validarNumeroConta);
        document.getElementById('PixNumero').addEventListener('input', validarPixNumero);
        document.getElementById('TipoConta').addEventListener('input', validarTipoConta);
        document.getElementById('PixChave').addEventListener('input', validarPixChave);


        function EditarBanco() {
            var idBanco = document.getElementById('IdBanco').value;
            var nome = document.getElementById('Nome').value;
            var agencia = document.getElementById('Agencia').value;
            var tipoConta = document.getElementById('TipoConta').value;
            var numeroConta = document.getElementById('NumeroConta').value;
            var pixChave = document.getElementById('PixChave').value;
            var pixNumero = document.getElementById('PixNumero').value;

            var vListaUsuariosRelacionados = document.getElementById('ListaUsuariosRelacionados');

            const listaDeObjetosRelacionados = [];
            var banco = {};

            console.log(vListaUsuariosRelacionados)

            if (direitoUsuarioLogado != "Operador") {
                // Percorrer as opções selecionadas
                for (let i = 0; i < vListaUsuariosRelacionados.options.length; i++) {
                    if (vListaUsuariosRelacionados.options[i]) {
                        // Criar um objeto e adicionar ao array
                        const objListaRelacionado = {
                            email: vListaUsuariosRelacionados.options[i].value
                        };
                        listaDeObjetosRelacionados.push(objListaRelacionado);
                    }
                }
                console.log("listaDeObjetosRelacionados")
                console.log(listaDeObjetosRelacionados)

                var vListaUsuariosNaoRelacionados = document.getElementById('ListaUsuariosNaoRelacionados');

                // Criar um array para armazenar os objetos
                const listaDeObjetosNaoRelacionados = [];

                // Percorrer as opções selecionadas
                for (let ii = 0; ii < vListaUsuariosNaoRelacionados.options.length; ii++) {
                    if (vListaUsuariosNaoRelacionados.options[ii]) {


                        var valor = vListaUsuariosNaoRelacionados.options[ii].value;

                        const obj = {
                            email: valor
                        };

                        listaDeObjetosNaoRelacionados.push(obj);

                    }
                }

                  banco = {
                    idBanco: idBanco,
                    nome: nome,
                    agencia: agencia,
                    tipoConta: tipoConta,
                    numeroConta: numeroConta,
                    pixChave: pixChave,
                    pixNumero: pixNumero,
                    listaUsuariosRelacionados: listaDeObjetosRelacionados,
                    listaUsuariosNaoRelacionados: listaDeObjetosNaoRelacionados
                }

            }
            else
            {
                 banco = {
                    idBanco: idBanco,
                    nome: nome,
                    agencia: agencia,
                    tipoConta: tipoConta,
                    numeroConta: numeroConta,
                    pixChave: pixChave,
                    pixNumero: pixNumero
                }
            }

            $.ajax({
                url: '/Bancos/Edit/'+banco.idBanco,
                type: 'PUT',
                data: banco,
                success: function (response) {
                    console.log("OKKK")
                    window.location.href = "/Bancos";
                }
            });


        }
                </script>
}