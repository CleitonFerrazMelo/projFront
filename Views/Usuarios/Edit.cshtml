@model projFront.ViewModels.UsuarioViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Usuario</h4>
<hr />

<script>
    var viewModel = @Html.Raw(Json.Serialize(ViewBag.DireitoSelecionado));


</script>


<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="UserName" class="control-label"></label>
                <input asp-for="UserName" id="UserName" name="UserName" class="form-control" disabled/>
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" id="Email" name="Email" class="form-control" disabled/>
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="text-label">Direito <span class="text-danger"> * </span></label>
                <select class="custom-select mr-sm-2" id="direito" name="IdDireito"  required>
                    <option selected>Escolha o direito</option>
                    @foreach (var dir in Model.Direito)
                    {
                        <option value="@dir.IdRegra">   @dir.Nome </option>
                    }
                </select>
            </div>

            <div class="form-group">
                <input type="submit" value="Salvar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script>
    
    var campoSelecao = document.getElementById('direito');

    console.log(viewModel);
    campoSelecao.value = viewModel.idRegra;

 

</script>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
