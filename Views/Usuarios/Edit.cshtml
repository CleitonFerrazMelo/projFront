@model projFront.ViewModels.UsuarioViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Usuario</h4>
<hr />

<script>
    var viewModel = @Html.Raw(Json.Serialize(ViewBag.DireitoSelecionado));

</script>


<div class="row">
    <div class="col-md-4">
        
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />


        <div id="mensagemErro" class="alert alert-danger d-none" role="alert">
            <span style="color: black; font-weight:700; " id="mensagemErroTexto"></span>
            </div>
        
        
            <div class="form-group">
                <label asp-for="UserName" class="control-label"></label>
                <input asp-for="UserName" id="UserName" name="UserName" class="form-control" disabled/>
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" id="Email" name="Email" class="form-control" disabled/>
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="text-label">Direito <span class="text-danger"> * </span></label>
                <select class="custom-select mr-sm-2" id="direito" name="IdDireito"  required>
                    <option selected>Escolha o direito</option>
                    @foreach (var dir in Model.Direito)
                    {
                        <option value="@dir.IdRegra">   @dir.Nome </option>
                    }
                </select>
            </div>
             <div class="form-group">
                <label asp-for="NumeroDaNotaAtual" class="control-label"></label>
            <input asp-for="NumeroDaNotaAtual" id="NumeroDaNotaAtual" name="NumeroDaNotaAtual" class="form-control"  />
            <span asp-validation-for="NumeroDaNotaAtual" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UltimoNumeroDaNota" class="control-label"></label>
            <input asp-for="UltimoNumeroDaNota" id="UltimoNumeroDaNota" name="UltimoNumeroDaNota" class="form-control"  />
            <span asp-validation-for="UltimoNumeroDaNota" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input onclick="EditarUsuario()" value="Editar Usuário" class="btn btn-success" />
            </div>
        
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script>
    
    var campoSelecao = document.getElementById('direito');

    console.log(viewModel);
    campoSelecao.value = viewModel.idRegra;

 

</script>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    

    <script>


       
        function EditarUsuario() {
            var ID = document.getElementById('Id').value;
            var userName = document.getElementById('UserName').value;
            var email = document.getElementById('Email').value;
            var direito = document.getElementById('direito').value;
            var NumeroDaNotaAtual = document.getElementById('NumeroDaNotaAtual').value;
            var UltimoNumeroDaNota = document.getElementById('UltimoNumeroDaNota').value;

            // Obtém o elemento select pelo ID
            var selectElement = document.getElementById('direito');
            // Obtém o índice da opção selecionada
            var selectedIndex = selectElement.selectedIndex;
            // Obtém o elemento da opção selecionada
            var selectedOption = selectElement.options[selectedIndex];
            // Obtém o valor da opção selecionada (o valor de IdRegra)
            var idRegra = selectedOption.value;

            var nomeRegra = selectedOption.text;

            // Create a Regra object
            var regra1 = new Regra(idRegra, nomeRegra);

            // Create a Usuario object with a list of Regra objects
            var usuario = new Usuario(ID, userName, email, [regra1], NumeroDaNotaAtual, UltimoNumeroDaNota);

            $.ajax({
                url: '/Usuarios/Edit/' + ID,
                type: 'PUT',
                dataType: "json",
                data: usuario,
                success: function (response) {
                    console.log("OKKK")
                    window.location.href = "/Usuarios";
                },
                error: function (data) {
                    
                    var responseText = JSON.parse(data.responseText);

                    $('#mensagemErroTexto').text(responseText.message);
                    $('#mensagemErro').removeClass('d-none').addClass('show'); // Adiciona a classe 'show' para animação

                    // Esconde a mensagem após 3 segundos
                    setTimeout(function () {
                        $('#mensagemErro').removeClass('show');
                    }, 3000);
                    
                }
            });


        }

        function Usuario(id, userName, email, direito, NumeroDaNotaAtual, UltimoNumeroDaNota) {
            this.Id = id;
            this.UserName = userName;
            this.Email = email;
            this.Direito = direito || []; // Initialize Direito as an empty array if not provided
            this.NumeroDaNotaAtual = NumeroDaNotaAtual;
            this.UltimoNumeroDaNota = UltimoNumeroDaNota;
        }

        function Regra(idRegra, nome) {
            this.IdRegra = idRegra;
            this.Nome = nome;
        }
    </script>



}
